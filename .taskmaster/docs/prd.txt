<context>
# Overview  
Be동사와 일반동사 구분 수업을 위한 반응형 웹 발표자료입니다. 영어 문법 수업에서 Be동사와 일반동사의 차이점을 시각적으로 보여주고, 학생들이 직접 참여할 수 있는 인터랙티브 요소를 포함한 교육용 웹페이지입니다.

# Core Features  
1. **수업 진행 단계별 슬라이드**
   - 도입(Warm-up), 전개1(개념 이해), 전개2-A(분류 게임), 전개2-B(문장 변환), 정리/발표, 마무리
   - 각 단계별 타이머 및 진행률 표시
   - 교사용 스크립트와 학생 활동 안내

2. **인터랙티브 학습 요소**
   - 문장 분류 게임 (Be동사 vs 일반동사)
   - 문장 변환 연습 (긍정→부정→의문)
   - 실시간 피드백 시스템

3. **반응형 디자인**
   - 데스크톱, 태블릿, 모바일 최적화
   - 터치 인터페이스 지원
   - 접근성 고려

4. **교육 자료 통합**
   - 이미지 및 아이콘 활용
   - 애니메이션 효과
   - 오디오 지원 (선택적)

# User Experience  
**교사 사용자:**
- 직관적인 수업 진행 인터페이스
- 학생 활동 모니터링 도구
- 실시간 피드백 제공 기능

**학생 사용자:**
- 명확한 시각적 학습 자료
- 참여 유도 인터랙티브 요소
- 즉시 피드백 시스템
</context>
<PRD>
# Technical Architecture  
**Frontend Framework:**
- Next.js 14 (App Router)
- TypeScript
- Tailwind CSS
- Framer Motion (애니메이션)

**UI Components:**
- React Hook Form (폼 관리)
- React Hot Toast (알림)
- Lucide React (아이콘)

**State Management:**
- Zustand (상태 관리)
- React Context (테마/언어)

**Deployment:**
- Vercel 배포
- GitHub 연동

# Development Roadmap  

**Phase 1: Foundation & Basic UI (MVP)**
- Next.js 프로젝트 설정
- 기본 레이아웃 및 네비게이션
- 수업 단계별 슬라이드 구조
- 반응형 디자인 기본 구현

**Phase 2: Interactive Features**
- 문장 분류 게임 구현
- 문장 변환 연습 기능
- 타이머 및 진행률 표시
- 기본 애니메이션 효과

**Phase 3: Enhanced UX & Content**
- 고품질 이미지 및 아이콘 통합
- 고급 애니메이션 및 전환 효과
- 접근성 개선
- 성능 최적화

**Phase 4: Advanced Features**
- 오디오 지원 (선택적)
- 학생 진도 추적
- 데이터 저장 및 분석
- 다국어 지원

# Logical Dependency Chain
1. **Foundation First:** Next.js 설정 → 기본 레이아웃 → 반응형 디자인
2. **Content Structure:** 슬라이드 구조 → 수업 내용 통합 → 기본 스타일링
3. **Interactive Elements:** 게임 로직 → UI 컴포넌트 → 상태 관리
4. **Polish & Deploy:** 애니메이션 → 최적화 → 배포

# Risks and Mitigations  
**Technical Challenges:**
- 복잡한 애니메이션 → Framer Motion 활용, 단계적 구현
- 반응형 디자인 → 모바일 우선 접근법, Tailwind CSS 활용

**Content Quality:**
- 교육적 가치 → 교육 전문가 검토, 사용자 테스트
- 시각적 매력도 → 전문 디자인 리소스 활용

**Performance:**
- 로딩 속도 → 이미지 최적화, 코드 스플리팅
- 사용자 경험 → 점진적 향상, 접근성 고려

# Appendix  
**참고 자료:**
- lecture_script.md (수업 스크립트)
- 영어 교육 웹사이트 벤치마킹
- 교육용 UI/UX 패턴 연구

**기술 스택 선택 근거:**
- Next.js: SEO, 성능, 개발 경험
- Tailwind CSS: 빠른 개발, 일관된 디자인
- TypeScript: 타입 안정성, 유지보수성
</PRD>
